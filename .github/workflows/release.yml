on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SDL2 + dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            libsdl2-dev \
            libsdl2-mixer-dev \
            libx11-dev \
            libxext-dev \
            libxrandr-dev \
            libwayland-dev \
            libdrm-dev \
            libgl1-mesa-dev \
            libudev-dev

      - name: Install ALSA dependencies
        run: sudo apt update && sudo apt install -y libpulse-dev libasound2-dev

      - name: Install Rust toolchains
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Add x86_64 target
        run: rustup target add x86_64-unknown-linux-gnu

      - name: Build for x86_64
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Rename binary
        run: mv target/x86_64-unknown-linux-gnu/release/gamuboy_rs_gui target/x86_64-unknown-linux-gnu/release/gamuboy_rs_gui_x86_64_linux

      - name: upload build
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: target/x86_64-unknown-linux-gnu/release/gamuboy_rs_gui_x86_64_linux

  build-macos:
    needs: create-release
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchains
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Add x86_64 target
        run: rustup target add x86_64-apple-darwin

      - name: Add ARM target
        run: rustup target add aarch64-apple-darwin

      - name: Build for x86_64 (Intel)
        run: cargo build --release --target x86_64-apple-darwin

      - name: Build for aarch64 (ARM)
        run: cargo build --release --target aarch64-apple-darwin

      - name: Create universal binary with lipo
        run: |
          mkdir -p target/universal
          lipo -create \
            target/x86_64-apple-darwin/release/gamuboy_rs_gui \
            target/aarch64-apple-darwin/release/gamuboy_rs_gui \
            -output target/universal/gamuboy_rs_gui_universal_apple-darwin

      - name: Rename Intel binary
        run: mv target/x86_64-apple-darwin/release/gamuboy_rs_gui target/x86_64-apple-darwin/release/gamuboy_rs_gui_x86_64-apple-darwin

      - name: upload Intel build
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: target/x86_64-apple-darwin/release/gamuboy_rs_gui_x86_64-apple-darwin

      - name: Rename ARM binary
        run: mv target/aarch64-apple-darwin/release/gamuboy_rs_gui target/aarch64-apple-darwin/release/gamuboy_rs_gui_aarch64-apple-darwin

      - name: upload ARM build
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: target/aarch64-apple-darwin/release/gamuboy_rs_gui_aarch64-apple-darwin

      - name: upload universal build
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: target/universal/gamuboy_rs_gui_universal_apple-darwin

  build-windows:
    needs: create-release
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchains
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Add x86_64 target
        run: rustup target add x86_64-pc-windows-msvc

      - name: Install vcpkg
        run: cargo install cargo-vcpkg

      - name: Build vcpkg
        run: cargo vcpkg build

      - name: Build for x86_64
        run: cargo build --release --target x86_64-pc-windows-msvc
        env:
          RUSTFLAGS: "-lAdvapi32 -lUser32 -lGdi32 -lShell32"

      - name: Rename binary
        run: mv target/x86_64-pc-windows-msvc/release/gamuboy_rs_gui.exe target/x86_64-pc-windows-msvc/release/gamuboy_rs_gui_x86_64_windows.exe

      - name: upload build
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: target/x86_64-pc-windows-msvc/release/gamuboy_rs_gui_x86_64_windows.exe

